// Code generated by protoc-gen-go. DO NOT EDIT.
// source: qwik.proto

/*
Package qwik is a generated protocol buffer package.

It is generated from these files:
	qwik.proto

It has these top-level messages:
	QwikEvent
	FileSystemEvent
*/
package qwik

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QwikEvent_Type int32

const (
	QwikEvent_FILESYSTEM QwikEvent_Type = 0
)

var QwikEvent_Type_name = map[int32]string{
	0: "FILESYSTEM",
}
var QwikEvent_Type_value = map[string]int32{
	"FILESYSTEM": 0,
}

func (x QwikEvent_Type) String() string {
	return proto.EnumName(QwikEvent_Type_name, int32(x))
}
func (QwikEvent_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type QwikEvent struct {
	Id        string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type      QwikEvent_Type `protobuf:"varint,2,opt,name=type,enum=qwik.QwikEvent_Type" json:"type,omitempty"`
	SrcIp     string         `protobuf:"bytes,3,opt,name=srcIp" json:"srcIp,omitempty"`
	Timestamp uint64         `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Event:
	//	*QwikEvent_Fsevent
	Event isQwikEvent_Event `protobuf_oneof:"event"`
}

func (m *QwikEvent) Reset()                    { *m = QwikEvent{} }
func (m *QwikEvent) String() string            { return proto.CompactTextString(m) }
func (*QwikEvent) ProtoMessage()               {}
func (*QwikEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isQwikEvent_Event interface {
	isQwikEvent_Event()
}

type QwikEvent_Fsevent struct {
	Fsevent *FileSystemEvent `protobuf:"bytes,5,opt,name=fsevent,oneof"`
}

func (*QwikEvent_Fsevent) isQwikEvent_Event() {}

func (m *QwikEvent) GetEvent() isQwikEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *QwikEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QwikEvent) GetType() QwikEvent_Type {
	if m != nil {
		return m.Type
	}
	return QwikEvent_FILESYSTEM
}

func (m *QwikEvent) GetSrcIp() string {
	if m != nil {
		return m.SrcIp
	}
	return ""
}

func (m *QwikEvent) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *QwikEvent) GetFsevent() *FileSystemEvent {
	if x, ok := m.GetEvent().(*QwikEvent_Fsevent); ok {
		return x.Fsevent
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*QwikEvent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _QwikEvent_OneofMarshaler, _QwikEvent_OneofUnmarshaler, _QwikEvent_OneofSizer, []interface{}{
		(*QwikEvent_Fsevent)(nil),
	}
}

func _QwikEvent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*QwikEvent)
	// event
	switch x := m.Event.(type) {
	case *QwikEvent_Fsevent:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Fsevent); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("QwikEvent.Event has unexpected type %T", x)
	}
	return nil
}

func _QwikEvent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*QwikEvent)
	switch tag {
	case 5: // event.fsevent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FileSystemEvent)
		err := b.DecodeMessage(msg)
		m.Event = &QwikEvent_Fsevent{msg}
		return true, err
	default:
		return false, nil
	}
}

func _QwikEvent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*QwikEvent)
	// event
	switch x := m.Event.(type) {
	case *QwikEvent_Fsevent:
		s := proto.Size(x.Fsevent)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type FileSystemEvent struct {
	Path         string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Op           uint32 `protobuf:"varint,2,opt,name=op" json:"op,omitempty"`
	ModifiedTime uint64 `protobuf:"varint,3,opt,name=modifiedTime" json:"modifiedTime,omitempty"`
	Size         uint64 `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
}

func (m *FileSystemEvent) Reset()                    { *m = FileSystemEvent{} }
func (m *FileSystemEvent) String() string            { return proto.CompactTextString(m) }
func (*FileSystemEvent) ProtoMessage()               {}
func (*FileSystemEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FileSystemEvent) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FileSystemEvent) GetOp() uint32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *FileSystemEvent) GetModifiedTime() uint64 {
	if m != nil {
		return m.ModifiedTime
	}
	return 0
}

func (m *FileSystemEvent) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func init() {
	proto.RegisterType((*QwikEvent)(nil), "qwik.QwikEvent")
	proto.RegisterType((*FileSystemEvent)(nil), "qwik.FileSystemEvent")
	proto.RegisterEnum("qwik.QwikEvent_Type", QwikEvent_Type_name, QwikEvent_Type_value)
}

func init() { proto.RegisterFile("qwik.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0xbb, 0x79, 0x37, 0x6f, 0xc9, 0xa8, 0x51, 0x86, 0x2a, 0x39, 0x78, 0x08, 0x39, 0xe5,
	0x14, 0xb0, 0x7e, 0x03, 0x21, 0xc5, 0x82, 0x1e, 0xdc, 0xe4, 0xe2, 0xb1, 0x9a, 0x29, 0x0e, 0x75,
	0xcd, 0xda, 0x5d, 0x2c, 0xf1, 0x3b, 0xfa, 0x9d, 0x64, 0x37, 0x55, 0xd1, 0xdb, 0xb3, 0xc3, 0xf3,
	0x87, 0xdf, 0x02, 0xbc, 0xee, 0x78, 0x53, 0x99, 0x6d, 0xef, 0x7a, 0x94, 0x5e, 0x17, 0x1f, 0x02,
	0x92, 0xbb, 0x1d, 0x6f, 0xea, 0x37, 0x7a, 0x71, 0x98, 0x42, 0xc4, 0x5d, 0x26, 0x72, 0x51, 0x26,
	0x2a, 0xe2, 0x0e, 0x4b, 0x90, 0x6e, 0x30, 0x94, 0x45, 0xb9, 0x28, 0xd3, 0xf9, 0xac, 0x0a, 0xf1,
	0x6f, 0x7b, 0xd5, 0x0e, 0x86, 0x54, 0x70, 0xe0, 0x0c, 0x62, 0xbb, 0x7d, 0x5c, 0x9a, 0xec, 0x5f,
	0x08, 0x8f, 0x0f, 0x3c, 0x87, 0xc4, 0xb1, 0x26, 0xeb, 0x56, 0xda, 0x64, 0x32, 0x17, 0xa5, 0x54,
	0x3f, 0x07, 0xbc, 0x80, 0xe9, 0xda, 0x92, 0x6f, 0xca, 0xe2, 0x5c, 0x94, 0x07, 0xf3, 0xd3, 0x71,
	0x60, 0xc1, 0xcf, 0xd4, 0x0c, 0xd6, 0x91, 0x0e, 0x33, 0xd7, 0x13, 0xf5, 0xe5, 0x2b, 0xce, 0x40,
	0xfa, 0x51, 0x4c, 0x01, 0x16, 0xcb, 0x9b, 0xba, 0xb9, 0x6f, 0xda, 0xfa, 0xf6, 0x64, 0x72, 0x35,
	0x85, 0x78, 0x34, 0x68, 0x38, 0xfe, 0x13, 0x47, 0x04, 0x69, 0x56, 0xee, 0x69, 0x8f, 0x15, 0xb4,
	0x07, 0xed, 0x4d, 0xc0, 0x3a, 0x52, 0x51, 0x6f, 0xb0, 0x80, 0x43, 0xdd, 0x77, 0xbc, 0x66, 0xea,
	0x5a, 0xd6, 0x14, 0x28, 0xa4, 0xfa, 0x75, 0xf3, 0x3d, 0x96, 0xdf, 0x69, 0xcf, 0x11, 0xf4, 0xc3,
	0xff, 0xf0, 0x97, 0x97, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x39, 0xb0, 0x3c, 0x63, 0x59, 0x01,
	0x00, 0x00,
}
